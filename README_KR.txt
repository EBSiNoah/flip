문자열 뒤집기

https://www.acmicpc.net/problem/1439
위 링크의 응용임

flip.py 에서
첫번째 방법 flip04A01 함수는 입력받은 문자열을 요약 한다.
0으로 연속된 부분을 하나의 0으로 취급하고, 1으로 연속된 부분을 하나의 1로 취급한다.
입력받은 문자열의 요약된 크기를 size 라고 하고, 요약된 문자열의 원소들의 합을 count 라고 하면
count 와 size-count 값을 비교하여 둘중 작은 값을 반환한다.

두번째 방법 flip05A02 함수는 입력받은 문자열의 패턴을 파악한다.
문자열을 처음부터 끝까지 2개씩 순서대로 한칸씩 읽으면서 4가지의 패턴을 보인다는 것을 알았는데
이는 [0,0],[0,1],[1,0],[1,1]과 같다.
이 패턴이 무엇을 의미하는지 알아보기 위해서 실험군을 만들 필요가 있었다.
그래서 6자리로 이루어진 문자열에 대해 모든 경우의 수, 즉 64가지를 찾아보았고 그 결과 특정한 패턴을 발견 할 수 있었다.
우선 [0,0]과 [1,1]인 경우는 큰 의미를 갖지 않는다.
문자열의 시작이 0 인 경우, [0,1] 모양이 나타난 횟수가 뒤집어야 하는 횟수와 같았고,
문자열의 시작이 1 인 경우, [1,0] 모양이 나타난 횟수가 뒤집어야 하는 횟수와 같다는 것을 알았다.
-------------------------------------------------------------------------------
flip.cpp 에서
사용한 방법은 같다.
첫번째 방법은
두번째 방법은

두 언어간에 실행 속도는 확실히 C++ 가 빨랐으나, 배열을 이용하는 방법의 편의성은 python 이 대체로 편하다.
